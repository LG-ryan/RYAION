//@version=6
strategy("VMSI-SDM v4 Dynamic Strategy", overlay=true, initial_capital=100000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, commission_type=strategy.commission.percent, commission_value=0.1)

// ═══════════════════════════════════════════════════════════
// 📌 v4 Dynamic Strategy - ATR 기반 동적 SL/TP
// ═══════════════════════════════════════════════════════════

// ... (파라미터는 indicator와 동일하므로 생략, 핵심만 작성)

var g_basic = "기본 설정"
ema1_len = input.int(20, "EMA1 기간", group=g_basic)
ema2_len = input.int(50, "EMA2 기간", group=g_basic)
rsi_len = input.int(14, "RSI 기간", group=g_basic)
vcp_len = input.int(20, "VCP 기간", group=g_basic)
atr_len = input.int(14, "ATR 기간", group=g_basic)

var g_signal = "신호 조건"
trend_score_buy = input.float(55, "트렌드 스코어 (매수)", minval=50, maxval=80, step=5, group=g_signal)
trend_score_sell = input.float(45, "트렌드 스코어 (매도)", minval=20, maxval=50, step=5, group=g_signal)
rsi_buy_min = input.float(48, "RSI 최소값 (매수)", minval=30, maxval=70, step=2, group=g_signal)
rsi_sell_max = input.float(52, "RSI 최대값 (매도)", minval=30, maxval=70, step=2, group=g_signal)
vol_mult_min = input.float(1.2, "거래량배수 최소값", minval=0.5, maxval=3, step=0.1, group=g_signal)

var g_weights = "가중치"
alpha = input.float(0.8, "Alpha (EMA)", step=0.05, group=g_weights)
beta = input.float(0.35, "Beta (RSI)", step=0.05, group=g_weights)
gamma = input.float(0.7, "Gamma (Volume)", step=0.05, group=g_weights)
delta = input.float(0.6, "Delta (VCP)", step=0.05, group=g_weights)

var g_risk = "리스크 관리 (동적)"
use_atr_based = input.bool(true, "ATR 기반 SL/TP", group=g_risk)
atr_sl_mult = input.float(1.5, "ATR SL 배수", step=0.1, minval=0.5, maxval=5, group=g_risk)
atr_tp_mult = input.float(2.5, "ATR TP 배수", step=0.1, minval=1, maxval=10, group=g_risk)
fixed_sl_pct = input.float(5.0, "고정 손절 %", step=0.5, minval=1, maxval=20, group=g_risk)
fixed_tp_pct = input.float(10.0, "고정 익절 %", step=0.5, minval=2, maxval=50, group=g_risk)

clamp(x, lo, hi) => math.max(lo, math.min(hi, x))
safe_div(a, b, fallback) => nz(b > 0 ? a / b : fallback, fallback)

ema1 = ta.ema(close, ema1_len)
ema2 = ta.ema(close, ema2_len)
rsi = ta.rsi(close, rsi_len)
vol_avg = ta.sma(volume, 20)
vol_mult = safe_div(volume, vol_avg, 1.0)
vcp_high = ta.highest(high, vcp_len)
vcp_low = ta.lowest(low, vcp_len)
vcp_ratio = safe_div(vcp_high - vcp_low, vcp_high, 0.5)
atr_val = ta.atr(atr_len)

calc_trend_score() =>
    ema_above = ema1 > ema2 ? 1.0 : 0.0
    rsi_norm = rsi / 100.0
    vol_norm = math.min(vol_mult / 3.0, 1.0)
    vcp_norm = 1.0 - vcp_ratio
    raw = (alpha * ema_above + beta * rsi_norm + gamma * vol_norm + delta * vcp_norm) * 100.0
    clamp(raw, 0.0, 100.0)

trend_score = calc_trend_score()

calc_dynamic_sl_tp(signal_type) =>
    var float sl_distance = 0.0
    var float tp_distance = 0.0
    
    if use_atr_based
        base_sl = atr_val * atr_sl_mult
        base_tp = atr_val * atr_tp_mult
        vcp_adjustment = 1.0 + (vcp_ratio * 0.5)
        sl_distance := base_sl * vcp_adjustment
        tp_distance := base_tp * vcp_adjustment
    else
        sl_distance := close * (fixed_sl_pct / 100.0)
        tp_distance := close * (fixed_tp_pct / 100.0)
    
    if trend_score >= 70 or trend_score <= 30
        tp_distance := tp_distance * 1.2
    
    [sl_distance, tp_distance]

buy_signal = barstate.isconfirmed and trend_score >= trend_score_buy and rsi > rsi_buy_min and vol_mult > vol_mult_min and ema1 > ema2
sell_signal = barstate.isconfirmed and trend_score <= trend_score_sell and rsi < rsi_sell_max and vol_mult > vol_mult_min and ema1 < ema2

// 매수 진입
if buy_signal and strategy.position_size == 0
    [sl_dist, tp_dist] = calc_dynamic_sl_tp("BUY")
    qty = strategy.equity / close
    strategy.entry("Long", strategy.long, qty=qty)
    sl_price = close - sl_dist
    tp_price = close + tp_dist
    strategy.exit("Long Exit", "Long", stop=sl_price, limit=tp_price)

// 매도 진입
if sell_signal and strategy.position_size == 0
    [sl_dist, tp_dist] = calc_dynamic_sl_tp("SELL")
    qty = strategy.equity / close
    strategy.entry("Short", strategy.short, qty=qty)
    sl_price = close + sl_dist
    tp_price = close - tp_dist
    strategy.exit("Short Exit", "Short", stop=sl_price, limit=tp_price)

// 역신호 청산
if strategy.position_size > 0 and sell_signal
    strategy.close("Long", comment="Reverse")

if strategy.position_size < 0 and buy_signal
    strategy.close("Short", comment="Reverse")

plot(ema1, "EMA1", color=color.new(color.blue, 0), linewidth=2)
plot(ema2, "EMA2", color=color.new(color.orange, 0), linewidth=2)

var table panel = table.new(position.top_right, 2, 8, border_width=1)
if barstate.islast
    table.cell(panel, 0, 0, "Trend Score", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 0, str.tostring(trend_score, "#.0"), bgcolor=color.new(color.gray, 80), text_color=color.white)
    
    table.cell(panel, 0, 1, "RSI", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 1, str.tostring(rsi, "#.0"), bgcolor=color.new(color.gray, 80), text_color=color.white)
    
    table.cell(panel, 0, 2, "ATR", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 2, str.tostring(atr_val, "#.##"), bgcolor=color.new(color.gray, 80), text_color=color.white)
    
    pos_text = strategy.position_size > 0 ? "롱" : strategy.position_size < 0 ? "숏" : "대기"
    pos_color = strategy.position_size > 0 ? color.new(color.green, 20) : strategy.position_size < 0 ? color.new(color.red, 20) : color.new(color.gray, 80)
    table.cell(panel, 0, 3, "포지션", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 3, pos_text, bgcolor=pos_color, text_color=color.white)
    
    pnl_pct = strategy.position_size != 0 ? (close - strategy.position_avg_price) / strategy.position_avg_price * 100 : 0
    pnl_color = pnl_pct > 0 ? color.new(color.green, 20) : pnl_pct < 0 ? color.new(color.red, 20) : color.new(color.gray, 80)
    table.cell(panel, 0, 4, "현재손익", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 4, str.tostring(pnl_pct, "#.##") + "%", bgcolor=pnl_color, text_color=color.white)
    
    total_profit = strategy.netprofit / strategy.initial_capital * 100
    total_color = total_profit > 0 ? color.new(color.green, 20) : total_profit < 0 ? color.new(color.red, 20) : color.new(color.gray, 80)
    table.cell(panel, 0, 5, "총수익", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 5, str.tostring(total_profit, "#.##") + "%", bgcolor=total_color, text_color=color.white)
    
    win_rate = strategy.wintrades > 0 ? strategy.wintrades / (strategy.wintrades + strategy.losstrades) * 100 : 0
    table.cell(panel, 0, 6, "승률", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 6, str.tostring(win_rate, "#.#") + "%", bgcolor=color.new(color.gray, 80), text_color=color.white)
    
    table.cell(panel, 0, 7, "거래횟수", bgcolor=color.new(color.gray, 20), text_color=color.white)
    table.cell(panel, 1, 7, str.tostring(strategy.closedtrades), bgcolor=color.new(color.blue, 20), text_color=color.white)

